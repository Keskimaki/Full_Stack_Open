Script started on 2021-11-27 10:21:28+02:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="80" LINES="26"]
[?2004h]0;peter@mini: ~/Documents/part12-containers-applications/script-answers[01;32mpeter@mini[00m:[01;34m~/Documents/part12-containers-applications/script-answers[00m$ docker con tainer run -it ubuntu bash
[?2004ldocker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create": dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
[?2004h]0;peter@mini: ~/Documents/part12-containers-applications/script-answers[01;32mpeter@mini[00m:[01;34m~/Documents/part12-containers-applications/script-answers[00m$ docker rn[Kn[Kun  --help
[?2004l
Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Run a command in a new container

Options:
      --add-host list                  Add a custom host-to-IP mapping
                                       (host:ip)
  -a, --attach list                    Attach to STDIN, STDOUT or STDERR
      --blkio-weight uint16            Block IO (relative weight),
                                       between 10 and 1000, or 0 to
                                       disable (default 0)
      --blkio-weight-device list       Block IO weight (relative device
                                       weight) (default [])
      --cap-add list                   Add Linux capabilities
      --cap-drop list                  Drop Linux capabilities
      --cgroup-parent string           Optional parent cgroup for the
                                       container
      --cgroupns string                Cgroup namespace to use
                                       (host|private)
                                       'host':    Run the container in
                                       the Docker host's cgroup namespace
                                       'private': Run the container in
                                       its own private cgroup namespace
                                       '':        Use the cgroup
                                       namespace as configured by the
                                                  default-cgroupns-mode
                                       option on the daemon (default)
      --cidfile string                 Write the container ID to the file
      --cpu-period int                 Limit CPU CFS (Completely Fair
                                       Scheduler) period
      --cpu-quota int                  Limit CPU CFS (Completely Fair
                                       Scheduler) quota
      --cpu-rt-period int              Limit CPU real-time period in
                                       microseconds
      --cpu-rt-runtime int             Limit CPU real-time runtime in
                                       microseconds
  -c, --cpu-shares int                 CPU shares (relative weight)
      --cpus decimal                   Number of CPUs
      --cpuset-cpus string             CPUs in which to allow execution
                                       (0-3, 0,1)
      --cpuset-mems string             MEMs in which to allow execution
                                       (0-3, 0,1)
  -d, --detach                         Run container in background and
                                       print container ID
      --detach-keys string             Override the key sequence for
                                       detaching a container
      --device list                    Add a host device to the container
      --device-cgroup-rule list        Add a rule to the cgroup allowed
                                       devices list
      --device-read-bps list           Limit read rate (bytes per second)
                                       from a device (default [])
      --device-read-iops list          Limit read rate (IO per second)
                                       from a device (default [])
      --device-write-bps list          Limit write rate (bytes per
                                       second) to a device (default [])
      --device-write-iops list         Limit write rate (IO per second)
                                       to a device (default [])
      --disable-content-trust          Skip image verification (default true)
      --dns list                       Set custom DNS servers
      --dns-option list                Set DNS options
      --dns-search list                Set custom DNS search domains
      --domainname string              Container NIS domain name
      --entrypoint string              Overwrite the default ENTRYPOINT
                                       of the image
  -e, --env list                       Set environment variables
      --env-file list                  Read in a file of environment variables
      --expose list                    Expose a port or a range of ports
      --gpus gpu-request               GPU devices to add to the
                                       container ('all' to pass all GPUs)
      --group-add list                 Add additional groups to join
      --health-cmd string              Command to run to check health
      --health-interval duration       Time between running the check
                                       (ms|s|m|h) (default 0s)
      --health-retries int             Consecutive failures needed to
                                       report unhealthy
      --health-start-period duration   Start period for the container to
                                       initialize before starting
                                       health-retries countdown
                                       (ms|s|m|h) (default 0s)
      --health-timeout duration        Maximum time to allow one check to
                                       run (ms|s|m|h) (default 0s)
      --help                           Print usage
  -h, --hostname string                Container host name
      --init                           Run an init inside the container
                                       that forwards signals and reaps
                                       processes
  -i, --interactive                    Keep STDIN open even if not attached
      --ip string                      IPv4 address (e.g., 172.30.100.104)
      --ip6 string                     IPv6 address (e.g., 2001:db8::33)
      --ipc string                     IPC mode to use
      --isolation string               Container isolation technology
      --kernel-memory bytes            Kernel memory limit
  -l, --label list                     Set meta data on a container
      --label-file list                Read in a line delimited file of labels
      --link list                      Add link to another container
      --link-local-ip list             Container IPv4/IPv6 link-local
                                       addresses
      --log-driver string              Logging driver for the container
      --log-opt list                   Log driver options
      --mac-address string             Container MAC address (e.g.,
                                       92:d0:c6:0a:29:33)
  -m, --memory bytes                   Memory limit
      --memory-reservation bytes       Memory soft limit
      --memory-swap bytes              Swap limit equal to memory plus
                                       swap: '-1' to enable unlimited swap
      --memory-swappiness int          Tune container memory swappiness
                                       (0 to 100) (default -1)
      --mount mount                    Attach a filesystem mount to the
                                       container
      --name string                    Assign a name to the container
      --network network                Connect a container to a network
      --network-alias list             Add network-scoped alias for the
                                       container
      --no-healthcheck                 Disable any container-specified
                                       HEALTHCHECK
      --oom-kill-disable               Disable OOM Killer
      --oom-score-adj int              Tune host's OOM preferences (-1000
                                       to 1000)
      --pid string                     PID namespace to use
      --pids-limit int                 Tune container pids limit (set -1
                                       for unlimited)
      --platform string                Set platform if server is
                                       multi-platform capable
      --privileged                     Give extended privileges to this
                                       container
  -p, --publish list                   Publish a container's port(s) to
                                       the host
  -P, --publish-all                    Publish all exposed ports to
                                       random ports
      --pull string                    Pull image before running
                                       ("always"|"missing"|"never")
                                       (default "missing")
      --read-only                      Mount the container's root
                                       filesystem as read only
      --restart string                 Restart policy to apply when a
                                       container exits (default "no")
      --rm                             Automatically remove the container
                                       when it exits
      --runtime string                 Runtime to use for this container
      --security-opt list              Security Options
      --shm-size bytes                 Size of /dev/shm
      --sig-proxy                      Proxy received signals to the
                                       process (default true)
      --stop-signal string             Signal to stop a container
                                       (default "SIGTERM")
      --stop-timeout int               Timeout (in seconds) to stop a
                                       container
      --storage-opt list               Storage driver options for the
                                       container
      --sysctl map                     Sysctl options (default map[])
      --tmpfs list                     Mount a tmpfs directory
  -t, --tty                            Allocate a pseudo-TTY
      --ulimit ulimit                  Ulimit options (default [])
  -u, --user string                    Username or UID (format:
                                       <name|uid>[:<group|gid>])
      --userns string                  User namespace to use
      --uts string                     UTS namespace to use
  -v, --volume list                    Bind mount a volume
      --volume-driver string           Optional volume driver for the
                                       container
      --volumes-from list              Mount volumes from the specified
                                       container(s)
  -w, --workdir string                 Working directory inside the container
[?2004h]0;peter@mini: ~/Documents/part12-containers-applications/script-answers[01;32mpeter@mini[00m:[01;34m~/Documents/part12-containers-applications/script-answers[00m$ [7msudo chmod[27m[7m [27m[7m666 /var/run/docker.sock [27m


[A[A[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csudo chmod 666 /var/run/docker.sock


[K[A[K[A[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[sudo] password for peter: 
[?2004h]0;peter@mini: ~/Documents/part12-containers-applications/script-answers[01;32mpeter@mini[00m:[01;34m~/Documents/part12-containers-applications/script-answers[00m$ sudo chmod 666 /var/run/docker.sock[A]0;peter@mini: ~/Documents/part12-containers-applications/script-answers[01;32mpeter@mini[00m:[01;34m~/Documents/part12-containers-applications/script-answers[00m$ docker run --help[K[A]0;peter@mini: ~/Documents/part12-containers-applications/script-answers[01;32mpeter@mini[00m:[01;34m~/Documents/part12-containers-applications/script-answers[00m$ [C[C[C[C[C[C[Ccontainer run -it ubuntu bash
[?2004lUnable to find image 'ubuntu:latest' locally
latest: Pulling from library/ubuntu

[1A[2K7b1a6ab2e44d: Pulling fs layer [1B[1A[2K7b1a6ab2e44d: Downloading  298.2kB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading   1.76MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  3.218MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  4.676MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  6.134MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  7.588MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading   9.05MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  10.52MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  11.99MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  13.45MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  14.92MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  16.39MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  17.86MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  19.32MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  20.77MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  22.24MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  23.71MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  25.17MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  26.63MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Downloading  28.09MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Verifying Checksum [1B[1A[2K7b1a6ab2e44d: Download complete [1B[1A[2K7b1a6ab2e44d: Extracting  294.9kB/28.57MB[1B[1A[2K7b1a6ab2e44d: Extracting  10.62MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Extracting  23.59MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Extracting  28.31MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Extracting  28.57MB/28.57MB[1B[1A[2K7b1a6ab2e44d: Pull complete [1BDigest: sha256:626ffe58f6e7566e00254b638eb7e0f3b11d4da9675088f4781a50ae288f3322
Status: Downloaded newer image for ubuntu:latest
]0;root@0388aea5b5b3: /root@0388aea5b5b3:/# [K]0;root@0388aea5b5b3: /root@0388aea5b5b3:/# ls
[0m[01;36mbin[0m   [01;34mdev[0m  [01;34mhome[0m  [01;36mlib32[0m  [01;36mlibx32[0m  [01;34mmnt[0m  [01;34mproc[0m  [01;34mrun[0m   [01;34msrv[0m  [30;42mtmp[0m  [01;34mvar[0m
[01;34mboot[0m  [01;34metc[0m  [01;36mlib[0m   [01;36mlib64[0m  [01;34mmedia[0m   [01;34mopt[0m  [01;34mroot[0m  [01;36msbin[0m  [01;34msys[0m  [01;34musr[0m
]0;root@0388aea5b5b3: /root@0388aea5b5b3:/# mkdir       cd usr/s  
]0;root@0388aea5b5b3: /usrroot@0388aea5b5b3:/usr# ls
[0m[01;34mbin[0m  [01;34mgames[0m  [01;34minclude[0m  [01;34mlib[0m  [01;34mlib32[0m  [01;34mlib64[0m  [01;34mlibx32[0m  [01;34mlocal[0m  [01;34msbin[0m  [01;34mshare[0m  [01;34msrc[0m
]0;root@0388aea5b5b3: /usrroot@0388aea5b5b3:/usr# c d  d src
]0;root@0388aea5b5b3: /usr/srcroot@0388aea5b5b3:/usr/src# ls
]0;root@0388aea5b5b3: /usr/srcroot@0388aea5b5b3:/usr/src# mkdir aoo  pp
]0;root@0388aea5b5b3: /usr/srcroot@0388aea5b5b3:/usr/src# ls
[0m[01;34mapp[0m
]0;root@0388aea5b5b3: /usr/srcroot@0388aea5b5b3:/usr/src# toucjh  h app/index.js
]0;root@0388aea5b5b3: /usr/srcroot@0388aea5b5b3:/usr/src# cd app
]0;root@0388aea5b5b3: /usr/src/approot@0388aea5b5b3:/usr/src/app# ls
index.js
]0;root@0388aea5b5b3: /usr/src/approot@0388aea5b5b3:/usr/src/app# exit
exit
[?2004h]0;peter@mini: ~/Documents/part12-containers-applications/script-answers[01;32mpeter@mini[00m:[01;34m~/Documents/part12-containers-applications/script-answers[00m$ exit
[?2004lexit

Script done on 2021-11-27 10:25:39+02:00 [COMMAND_EXIT_CODE="0"]
